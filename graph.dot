digraph SkillsTree 
{
    label="Skills Tree";  
    node [shape=ellipse];
    
    BreadthKnowledge [
        label = "Broad Knowledge:\n Know some theory,\n or do a small related project", 
        shape=ellipse]
    DepthKnowledge   [
        label = "Deep Knowledge:\n Know theory,\n and do a project longer than 1 month", 
        shape=ellipse,
        style=filled, color = green ]
    
	MultiMedia -> {
		AudioCodecRendering         [ label = "Audio\n Codec & Rendering"];
		VideoImageCodec             [ label = "Video/Image\n Codec" ];
		ContainerProtocol      		[ label = "Container\n Protocol"];
		StreamingProtocol      		[ label = "Streaming\n Protocol"];
		Android
		WebRTC						[ label = "WebRTC", style=filled, color = green ]
	}
	{
		AudioCodecRendering -> {
			AudioCodec      [label = "Audio Codec" ]
			AudioRender     [label = "Audio Rendering"]
			Psychoacoustics [label = "Psychoacoustics"]
		}
		{
			AudioCodec -> {
				AudioStandards [label = "Standards"]
				AudioTheory      [label = "Theory"]
			}
			{
				AudioStandards -> {
					MP3         [label = "MP3\n 1993"]
					AAC         [label = "AAC\n 1997"]
					AC3         [label = "AC3\n 1992"]
					EAC3        [label = "EAC3", style=filled, color = green ]
					AC4         [label = "AC4\n 2015", style=filled, color = green ]
					Opus        [label = "Opus\n 2012"]
				}
				AudioTheory -> {
					Waveform    [label = "Waveform\n coding"]
					SBR         [label = "SBR\n Spectral\n Band\n Replication"]
					PS          [label = "PS\n Parametric\n Stereo", style=filled, color = green ]
					Resampler   [label = "Resampler", style=filled, color = green ]
				}
				{
					Waveform -> {
						MDCT        [label = "MDCT", style=filled, color = green ]
						Huffman     [label = "Huffman", style=filled, color = green ]
						AudioQuant [label = "Quantization" ]
					}
				}
			}
			AudioRender -> {
				HRTF    [label = "HRTF", style=filled, color = green ]
				QMF     [label = "QMF", style=filled, color = green ]
				ERB     [label = "ERB", style=filled, color = green ]
			}
			Psychoacoustics -> {
				MaskingEffects         [label = "Masking\n Effects"]
				EqualLoudnessContour  [label = "Equal\n Loudness\n Contour"]
				CriticalBand           [label = "Critical\n Band"]
				SoundLocalization      [label = "Sound\n Localization"]
				MissingFundamental     [label = "Missing\n Fundamental"]                    
			}
		}
		VideoImageCodec -> {
			VideoStandards   [label = "Standards"]
			VideoTheory      [label = "Theory"]
		}
		{
			VideoStandards -> {
				H264  [label = "MPEG4 Part 10\n H264\n AVC\n 2003", style=filled, color = green ]
				H265  [label = "H265\n HEVC\n 2013"]
				VP9   [label = "VP9\n Google\n 2012"]
			}
			VideoTheory -> {
				ChromaSubsampling  [label = "Chroma\n Subsampling"]
				DCTII              [label = "DCT-II"]
				Quant              [label = "Quant"]
				MotionEstimate     [label = "Motion\n Estimate"]
				EncryptionCoding   [label = "Encryption\n Coding"]
				SVC
			}
		}
		ContainerProtocol -> {
			MP4
			FLV
			MPEGTS     	[label = "MPEG-TS"]
		}
		StreamingProtocol -> {
			RTP			[label = "RTP/RTCP", style=filled, color = green ]
			HLS
			RTMP
		}
		Android -> {
			NDK             [label = "NDK\n build", style=filled, color = green ]
			JNI             [label = "JNI", style=filled, color = green ]
			Power           [label = "Power\n Measurement", style=filled, color = green ]
			MediaFramework  [label = "Media\n Framework" ]
			AppDevelopment	[label = "App\n Development"]
		}
		WebRTC -> {
			WebRTCAudio 	[label = "Capture\n APM\n Opus\n Mixer\n Render"]
			WebRTCVideo		[label = "Capture\n Encoder\n CongestionControl\n PacketLoss\n Pacer"]
			Signaling
		}
	}
	ComputerVision -> {
		OpenCV              [ label = "OpenCV", style=filled, color = green]
		Face                [ label = "Face Recognition", style=filled, color = green]
		ObjTrack           [ label = "Object\n Tracking"]
		LocalFeature       [ label = "Local\n Feature\n Detectors"]
		ImageStitch        [ label = "Image\n Stitch"]
		CameraCalibration  [ label = "Camera\n Calibration"]
		MachineLearning
	}
	{
		LocalFeature -> {
			HoG
			DoG
			LoG
			HarrisCorner   [label = "Harris\n Corner"]
			SIFT
			SURF
			LBP
			Haar            [label = "Haar", style=filled, color = green ]
			GoH             [label = "Gabor\n Oriented \n Hist", style=filled, color = green ]
		}
		MachineLearning -> {
			Adaboost    [ label = "Adaboost",        style=filled, color = green]
			DimReduce  [ label = "Dim \nReduction", style=filled, color = green]
			Meanshift   [ label = "Meanshift",       style=filled, color = green]
			ConvexOpt   [ label = "Convex Opt"]
			Caffe       [ label = "Caffe code", style=filled, color = red ]
			SVM         [ label = "SVM\nLibSVM"]
			LR          [ label = "LR"]
		}
	}
	
	ComputerSystem -> {
			PerfOpt   [label = "Performance\n Optimization" ]
			Toolchain  [label = "Toolchain" ]
			VirtualMemory      [label = "Virtual\n Memory"]
			Distribution
	}
	{
		PerfOpt -> {
			ARMx86QDSP [label = "ARM\n x86\n QDSP", style=filled, color = green ]
			SIMD                [label = "SIMD\n NEON\n SSE" , style=filled, color = green ]
			MemoryMountain     [label = "Memory\n Mountain" , style=filled, color = green ]
			Cache               [label = "Cache"             , style=filled, color = green ]
			OoO                 [label = "Out\n of\n Order"  , style=filled, color = green ]
			DataStall          [label = "Data\n Stall"      , style=filled, color = green ]
			Pipeline            [label = "Pipeline"]
		}
		Toolchain -> {
			Compilerloader [label = "Compiler\n Linker\n Loader", style=filled, color = green ]
			GDB [label = "GDB", style=filled, color = green]
		}
		{
			Compilerloader -> {
				libtype    [label = "Static\n Dynamic\n Library"]
				OsType     [label = "Android\n iOS\n Linux\n Windows"]
			}
		}
		Distribution -> {
			MapReduce [ label = "MapReduce", style=filled, color = green ];
		}
	}
	Robot -> {
		Localization        [label = "Localization", style=filled, color = green ]
		MovementControl    [label = "PID\n Movement\n Control", style=filled, color = green ]
		uCOS               [label = "uC/OS-II", style=filled, color = green ]
	}
}
